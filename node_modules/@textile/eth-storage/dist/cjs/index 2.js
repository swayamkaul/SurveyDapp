"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.init = exports.createToken = void 0;
const core_storage_1 = require("@textile/core-storage");
const registry_1 = require("./registry");
const provider_1 = require("./provider");
const token_1 = require("./token");
Object.defineProperty(exports, "createToken", { enumerable: true, get: function () { return token_1.create; } });
__exportStar(require("./utils"), exports);
const TOS = `
This is a beta release of @textile/eth-storage. Do not store personal, encrypted, or illegal data.
Data will not be available permanently on either Filecoin or IPFS. See the full terms of service
(TOS) for details: https://eth.storage/terms`;
/**
 * Initialize a Filecoin Storage Interface.
 * This will generate a new JWT token, signed by the user for interacting with a remote
 * Bridge Provider. If no Bridge Provider is given, this will also query the on-chain Bridge
 * Registry to find a suitable Provider.
 *
 * @param account User account as a `ethers.Signer` object.
 * @param opts Additional configuration options. Possible values include a pre-signed token,
 * registry contract, provider contract, and standard JWT claims.
 * @returns A promise that resolves to a CoreAPI object.
 */
function init(account, opts = {}) {
    return __awaiter(this, void 0, void 0, function* () {
        // TODO: Eventually remove this in favor of wallet singing information?
        console.info(TOS);
        // eslint-disable-next-line prefer-const
        let { registry, provider, token } = opts, claims = __rest(opts, ["registry", "provider", "token"]);
        const reg = registry_1.create(account, registry);
        if (!provider) {
            const [first] = yield reg.listProviders();
            provider = first;
        }
        const prov = yield provider_1.create(account, provider);
        const host = yield prov.apiEndpoint();
        // TODO: Need to match the token expiration w/ the locked funds expiration
        if (!token) {
            token = yield token_1.create(account, Object.assign({ aud: provider }, claims));
        }
        const store = core_storage_1.create({ token, host });
        return Object.assign(Object.assign(Object.assign({}, prov), reg), store);
    });
}
exports.init = init;
//# sourceMappingURL=index.js.map