import type { BigNumber, Signer } from "ethers";
import type { CoreAPI, StandardClaims, InitOptions } from "@textile/core-storage";
import { create as createToken } from "./token";
export * from "./utils";
export { createToken };
export { CoreAPI, StandardClaims, Request, RequestInfo, Deal, InitOptions, OpenOptions, StorageAPI, RegistryAPI, ProviderAPI, DepositAdded, DepositReleased, StorageConfig, Header, Signer, } from "@textile/core-storage";
/**
 * Initialize a Filecoin Storage Interface.
 * This will generate a new JWT token, signed by the user for interacting with a remote
 * Bridge Provider. If no Bridge Provider is given, this will also query the on-chain Bridge
 * Registry to find a suitable Provider.
 *
 * @param account User account as a `ethers.Signer` object.
 * @param opts Additional configuration options. Possible values include a pre-signed token,
 * registry contract, provider contract, and standard JWT claims.
 * @returns A promise that resolves to a CoreAPI object.
 */
export declare function init(account: Signer, opts?: InitOptions & StandardClaims): Promise<CoreAPI<BigNumber>>;
